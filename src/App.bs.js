// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Types$ReactTemplate = require("./Types.bs.js");
var UIUtils$ReactTemplate = require("./UIUtils.bs.js");
var GamesList$ReactTemplate = require("./GamesList.bs.js");
var CardGameAdd$ReactTemplate = require("./CardGameAdd.bs.js");
var CardGameView$ReactTemplate = require("./CardGameView.bs.js");

var appName = "Manatee";

var app = ReasonReact.reducerComponent("App");

function make(_children) {
  return /* record */[
          /* debugName */app[/* debugName */0],
          /* reactClassInternal */app[/* reactClassInternal */1],
          /* handedOffState */app[/* handedOffState */2],
          /* willReceiveProps */app[/* willReceiveProps */3],
          /* didMount */(function (self) {
              ReasonReact.Router[/* watchUrl */1]((function (url) {
                      var match = url[/* path */0];
                      if (match) {
                        if (match[0] === "cardgame") {
                          var match$1 = match[1];
                          if (match$1) {
                            var match$2 = match$1[1];
                            var id = match$1[0];
                            if (match$2) {
                              if (match$2[0] === "cardset" && !match$2[1]) {
                                return Curry._1(self[/* send */3], /* ShowCardList */Block.__(1, [id]));
                              } else {
                                return Curry._1(self[/* send */3], /* Void */1);
                              }
                            } else {
                              return Curry._1(self[/* send */3], /* ShowCardGame */Block.__(0, [id]));
                            }
                          } else {
                            return Curry._1(self[/* send */3], /* Void */1);
                          }
                        } else {
                          return Curry._1(self[/* send */3], /* Void */1);
                        }
                      } else {
                        return Curry._1(self[/* send */3], /* GetHome */0);
                      }
                    }));
              return /* () */0;
            }),
          /* didUpdate */app[/* didUpdate */5],
          /* willUnmount */app[/* willUnmount */6],
          /* willUpdate */app[/* willUpdate */7],
          /* shouldUpdate */app[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* view */0];
              switch (match) {
                case 0 : 
                    return React.createElement("div", undefined, React.createElement("h1", {
                                    className: "center-align"
                                  }, React.createElement("span", {
                                        className: "blue-grey-text text-lighten-2"
                                      }, UIUtils$ReactTemplate.str(appName))), ReasonReact.element(undefined, undefined, CardGameAdd$ReactTemplate.make(self[/* send */3], /* array */[])), ReasonReact.element(undefined, undefined, GamesList$ReactTemplate.make(self[/* state */1][/* games */3], /* array */[])), $$Array.of_list(List.map((function (x) {
                                          var cg = x[1];
                                          return React.createElement("div", {
                                                      key: String(cg[/* id */0])
                                                    }, UIUtils$ReactTemplate.str(cg[/* name */1]));
                                        }), Curry._1(Types$ReactTemplate.IntMap[/* bindings */16], self[/* state */1][/* test_ */4]))));
                case 1 : 
                    return React.createElement("div", undefined, UIUtils$ReactTemplate.str("card list"));
                case 2 : 
                    return ReasonReact.element(undefined, undefined, CardGameView$ReactTemplate.make(List.nth(self[/* state */1][/* games */3], self[/* state */1][/* activeGameId */2]), /* array */[]));
                case 3 : 
                    return React.createElement("div", undefined, UIUtils$ReactTemplate.str("...nowhere"));
                
              }
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* view : HomeView */0,
                      /* nextId */1,
                      /* activeGameId */0,
                      /* games : :: */[
                        /* record */[
                          /* id */0,
                          /* name */"test game",
                          /* description */"super card game",
                          /* cardSets */undefined
                        ],
                        /* [] */0
                      ],
                      /* test_ */Curry._3(Types$ReactTemplate.IntMap[/* add */3], 0, /* record */[
                            /* id */0,
                            /* name */"With IntMap",
                            /* description */"--",
                            /* cardSets */undefined
                          ], Types$ReactTemplate.IntMap[/* empty */0])
                    ];
            }),
          /* retainedProps */app[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action === 0) {
                  Curry._2(Types$ReactTemplate.IntMap[/* iter */9], (function (k, _v) {
                          console.log(k);
                          return /* () */0;
                        }), state[/* test_ */4]);
                  return /* Update */Block.__(0, [/* record */[
                              /* view : HomeView */0,
                              /* nextId */state[/* nextId */1],
                              /* activeGameId */state[/* activeGameId */2],
                              /* games */state[/* games */3],
                              /* test_ */state[/* test_ */4]
                            ]]);
                } else {
                  return /* Update */Block.__(0, [/* record */[
                              /* view : Nowhere */3,
                              /* nextId */state[/* nextId */1],
                              /* activeGameId */state[/* activeGameId */2],
                              /* games */state[/* games */3],
                              /* test_ */state[/* test_ */4]
                            ]]);
                }
              } else {
                switch (action.tag | 0) {
                  case 0 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* view : CardGameView */2,
                                  /* nextId */state[/* nextId */1],
                                  /* activeGameId */Caml_format.caml_int_of_string(action[0]),
                                  /* games */state[/* games */3],
                                  /* test_ */state[/* test_ */4]
                                ]]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* view : CardSetView */1,
                                  /* nextId */state[/* nextId */1],
                                  /* activeGameId */state[/* activeGameId */2],
                                  /* games */state[/* games */3],
                                  /* test_ */state[/* test_ */4]
                                ]]);
                  case 2 : 
                      var name = action[0];
                      return /* Update */Block.__(0, [/* record */[
                                  /* view */state[/* view */0],
                                  /* nextId */state[/* nextId */1] + 1 | 0,
                                  /* activeGameId */state[/* activeGameId */2],
                                  /* games */List.concat(/* :: */[
                                        state[/* games */3],
                                        /* :: */[
                                          /* :: */[
                                            /* record */[
                                              /* id */state[/* nextId */1],
                                              /* name */name,
                                              /* description */"--",
                                              /* cardSets */undefined
                                            ],
                                            /* [] */0
                                          ],
                                          /* [] */0
                                        ]
                                      ]),
                                  /* test_ */Curry._3(Types$ReactTemplate.IntMap[/* add */3], state[/* nextId */1], /* record */[
                                        /* id */state[/* nextId */1],
                                        /* name */name,
                                        /* description */"--",
                                        /* cardSets */undefined
                                      ], state[/* test_ */4])
                                ]]);
                  
                }
              }
            }),
          /* jsElementWrapped */app[/* jsElementWrapped */13]
        ];
}

exports.appName = appName;
exports.app = app;
exports.make = make;
/* app Not a pure module */
